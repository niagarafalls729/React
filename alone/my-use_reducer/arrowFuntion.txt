함수

1) 한번에 한작업에 집중
읽기 쉽고 어떤 동작인지 알 수 있게 네이밍
ex)
showError
- 에러를 보여주다.
getName 
- 이름을 가져오다.
createUserData
- 유저데이터 생성
checkLogin
- 로그인 여부 체크

1)
function sayHello(){
    console.log('Hello');
}
2)
let sayHello = function(){
    console.log('Hello');
}
---------------------------
두개의 차이점은 
1) 은 어디서든 호출가능 (순서가 상관없음 인터프릭트언어)(호이스팅)
2) let이기에 위에서 읽어가면서 하기에 그 이후에만 사용가능.

화살표함수

let add = function (num1, num2){
    return num1 + num2;
}

let add = (num1,num2) =>{
    return num1 + num2;
}
↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
let add = (num1, num2) =>( 
    num1+ num2;
)
↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓return 문이 한줄이면 () 도 생략가능
let add = (num1, num2) => num1+ num2;

↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 인수도 1개라면 또 괄호 삭제 가능
let add = num = 'number: ${num}'


↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 반면 인수가 아예 없다면 삭제 불가능.
let showError = () => {
    alert('error');
}
 

 